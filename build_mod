#!/bin/bash

# Copies needed mod files, cooks, packs and creates metadata
# Usage: first argument is the path to the mod in form: /[driveLetter]/[restOfThePath]
# no '/' at the end
#
# Requirements:
# 1) wcc_lite in PATH
# 2) Mod directory structure:
#      [modWorkDir]/Cooked (cooked files)
#	   [modWorkDir]/Uncooked (uncooked files)
#	   [modWorkDir]/Packed/[modReadyFolder] (mod package)
#

# SCRIPT FILES BEGIN
scriptFile[0]="/game/player/playerWitcher.ws"
scriptFile[1]="/game/projectile/arrowProjectile.ws"
scriptFile[2]="/game/gameplay/damage/damageManagerProcessor.ws"
# SCRIPT FILES END

# ASSET FILES BEGIN
assetFile[0]="/gameplay/abilities/geralt_skills.xml"
assetFile[1]="/gameplay/abilities_plus/geralt_skills.xml"

assetFile[2]="/dlc/bob/data/gameplay/abilities/geralt_skills_ep2.xml"
assetFile[3]="/dlc/bob/data/gameplay/abilities_plus/geralt_skills_ep2.xml"
# ASSET FILES END

set -e

if [ -z $1 ]
then
    echo "Wrong path to the mod!"
	exit
fi

modReadyFolder=$1"/Packed/modGrandBalanceRepairCombat"
modContentPath=$modReadyFolder"/content"

inXMLPath="Uncooked"
inScriptPath="Script/scripts"

outScriptPath=$modContentPath"/scripts"

outXmlPath1=$1"/Uncooked"
outXmlPath2=$1"/Cooked"

if [ ${#scriptFile[@]} != 0 ];
then
	for i in "${scriptFile[@]}"
	do
		cp $inScriptPath$i $outScriptPath$i
	done
fi

if [ ${#assetFile[@]} != 0 ];
then
	for i in "${assetFile[@]}"
	do
		cp $inXMLPath$i $outXmlPath1$i
		cp $inXMLPath$i $outXmlPath2$i
	done
fi

if [ -d "ModRes/strings" ]; then
	cp -r ModRes/strings/* $modContentPath
fi

if [ -d "ModRes/bin" ]; then
	cp -r ModRes/bin $modReadyFolder
fi

echo "Files copied OK."

if [ ${#assetFile[@]} != 0 ];
then
	wcc_lite cook -platform=pc -mod=$outXmlPath1 -basedir=$outXmlPath1 -outdir=$outXmlPath2
	wcc_lite pack -dir=$outXmlPath2 -outdir=$modContentPath
	wcc_lite metadatastore -path=$modContentPath
fi
