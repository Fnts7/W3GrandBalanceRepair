#!/bin/bash

# Copies needed mod files, cooks, packs and creates metadata
# Usage: first argument is the path to the mod in form: /[driveLetter]/[restOfThePath]
# no '/' at the end
#
# Requirements:
# 1) wcc_lite in PATH
# 2) Mod directory structure:
#      [modWorkDir]/Cooked (cooked files)
#	   [modWorkDir]/Uncooked (uncooked files)
#	   [modWorkDir]/Packed/[modReadyFolder] (mod package)
#

# SCRIPT FILES BEGIN
scriptFile[0]="/game/actor.ws"
scriptFile[1]="/game/player/playerWitcher.ws"
scriptFile[2]="/game/npc/npc.ws"
scriptFile[3]="/game/gameplay/items/spells/axiiEntity.ws"
scriptFile[4]="/game/gameplay/items/spells/quenEntity.ws"
scriptFile[5]="/game/gameplay/items/spells/signEntity.ws"
scriptFile[6]="/game/gameplay/items/spells/yrdenEntity.ws"
scriptFile[7]="/game/gameplay/effects/effects/other/slowdownFrost.ws"
scriptFile[8]="/game/gameplay/effects/effects/skill/axiiGuardMe.ws"
scriptFile[9]="/game/gameplay/damage/damageManagerProcessor.ws"

scriptFile[10]="/game/gameplay/effects/effectManager.ws"
scriptFile[11]="/game/gameplay/projectile/signs/signProjectiles.ws"
scriptFile[12]="/game/components/inventoryComponent.ws"
scriptFile[13]="/game/gui/menus/characterMenu.ws"
scriptFile[14]="/game/gui/popups/CharacterStatsPopup.ws"
scriptFile[15]="/game/gui/_old/components/guiTooltipComponent.ws"
scriptFile[16]="/game/gameplay/effects/effects/skill/yrdenHealthDrain.ws"
scriptFile[17]="/game/gameplay/items/spells/igniEntity.ws"
scriptFile[18]="/game/player/r4Player.ws"
scriptFile[19]="/game/gameplay/ability/PlayerAbilityManager.ws"
scriptFile[20]="/game/gameplay/actions/baseAction.ws"
scriptFile[21]="/game/gameplay/effects/effects/applicator/knockdownTypeApplicator.ws"

scriptFile[22]="/mod/axiiMods.ws"
# SCRIPT FILES END

# ASSET FILES BEGIN
assetFile[0]="/gameplay/abilities/effects.xml"
assetFile[1]="/gameplay/abilities_plus/effects.xml"
assetFile[2]="/gameplay/abilities/geralt_skills.xml"
assetFile[3]="/gameplay/abilities_plus/geralt_skills.xml"
assetFile[4]="/gameplay/abilities/monster_base_abl_new.xml"
assetFile[5]="/gameplay/abilities_plus/monster_base_abl_new.xml"
assetFile[6]="/gameplay/abilities/opp_base_abl.xml"
assetFile[7]="/gameplay/abilities_plus/opp_base_abl.xml"

assetFile[8]="/dlc/bob/data/gameplay/abilities/effects_ep2.xml"
assetFile[9]="/dlc/bob/data/gameplay/abilities_plus/effects_ep2.xml"
assetFile[10]="/dlc/bob/data/gameplay/abilities/geralt_mutations.xml"
assetFile[11]="/dlc/bob/data/gameplay/abilities_plus/geralt_mutations.xml"
assetFile[12]="/dlc/bob/data/gameplay/abilities/geralt_skills_ep2.xml"
assetFile[13]="/dlc/bob/data/gameplay/abilities_plus/geralt_skills_ep2.xml"

assetFile[14]="/gameplay/gui_new/swf/character/panel_character.redswf"
# ASSET FILES END

set -e

if [ -z $1 ]
then
    echo "Wrong path to the mod!"
	exit
fi

modReadyFolder=$1"/Packed/modSignsOverhaul"
modContentPath=$modReadyFolder"/content"

inXMLPath="Uncooked"
inScriptPath="Script/scripts"

outScriptPath=$modContentPath"/scripts"

outXmlPath1=$1"/Uncooked"
outXmlPath2=$1"/Cooked"

if [ ${#scriptFile[@]} != 0 ];
then
	for i in "${scriptFile[@]}"
	do
		cp $inScriptPath$i $outScriptPath$i
	done
fi

if [ ${#assetFile[@]} != 0 ];
then
	for i in "${assetFile[@]}"
	do
		cp $inXMLPath$i $outXmlPath1$i
		cp $inXMLPath$i $outXmlPath2$i
	done
fi

if [ -d "ModRes/strings" ]; then
	cp -r ModRes/strings/* $modContentPath
fi

if [ -d "ModRes/bin" ]; then
	cp -r ModRes/bin $modReadyFolder
fi

echo "Files copied OK."

if [ ${#assetFile[@]} != 0 ];
then
	wcc_lite cook -platform=pc -mod=$outXmlPath1 -basedir=$outXmlPath1 -outdir=$outXmlPath2
	wcc_lite pack -dir=$outXmlPath2 -outdir=$modContentPath
	wcc_lite metadatastore -path=$modContentPath
fi
